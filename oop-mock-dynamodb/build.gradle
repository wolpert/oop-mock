/*
 * Copyright (c) 2022 CodeHead Systems. All rights reserved
 */

// Testing in Intelij requires the library in your lib path. Errors will show where it needs to be. Example
// from an Ubuntu box
//  sudo mkdir /usr/lib/jni
//  sudo cp -i oop-mock-dynamodb/build/libs/libsqlite4java-linux-amd64-1.0.392.so /usr/lib/jni


ext {
    appName = "oop-mock-dynamodb"
    version = "1.0"
}

configurations {
    project.archivesBaseName = "${appName}"
    jar.archiveBaseName = "${appName}"
    dynamodb
}

jacocoTestReport.finalizedBy jacocoTestCoverageVerification


tasks.register('copyNativeDeps', Copy) {
    from configurations.dynamodb
    into "$project.buildDir/libs/"
}

test.dependsOn copyNativeDeps
test.doFirst {
    systemProperty "java.library.path", 'build/libs'
}
// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "wolpert"
            name "Ned Wolpert"
            email "ned.wolpert@codeheadsystems.com"
        }
    }

    scm {
        url "https://github.com/wolpert/terrapin"
    }
}

dependencies {
    implementation project(":oop-mock-common")
    implementation project(":oop-mock-client")
    testImplementation project(":oop-mock-tests")
    testImplementation "com.codeheadsystems:codehead-test:${codeheadTestVersion}"
    testImplementation "com.codeheadsystems:database-test:${codeheadDatabaseTestVersion}"

    // DynamoDB testing
    dynamodb libs.aws.dynamodblocal
    implementation libs.aws.java.sdk.dynamodb
    implementation libs.slf4j.api
    implementation libs.jackson.annotations 
    implementation libs.jackson.databind 
    implementation libs.jackson.core 
    implementation libs.jackson.datatype.jdk8 
    implementation libs.guava 
    implementation libs.commons.io 

    // Dagger
    implementation libs.dagger // Common files for runtime
    annotationProcessor libs.dagger.compiler

    // Immutables
    implementation libs.immutables.value.annotations 
    annotationProcessor libs.immutables.value 
    testAnnotationProcessor libs.immutables.value 

    testImplementation libs.assertj.core 
    testImplementation libs.junit.jupiter.engine 
    testImplementation libs.junit.jupiter.api 
    testImplementation libs.junit.jupiter.params 
    testImplementation libs.mockito.junit.jupiter 
    testImplementation libs.mockito.core 
    testImplementation libs.logback.classic 
    testImplementation libs.logback.core 
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = appName
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Oop-mock dynamodb'
                description = 'Oop-mock library to store configuration data in dynamodb.'
                url = 'https://github.com/wolpert/codehead-test'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'wolpert'
                        name = 'Ned Wolpert'
                        email = 'ned.wolpert@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/wolpert/codehead-test.git'
                    developerConnection = 'scm:git:ssh://github.com/wolpert/codehead-test.git'
                    url = 'https://github.com/wolpert/codehead-test/'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            name = "ossrh"
            credentials(PasswordCredentials)
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

generateMetadataFileForMavenJavaPublication {
    dependsOn(":oop-mock-dynamodb:copyNativeDeps")
}
