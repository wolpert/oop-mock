/*
 * Copyright (c) 2022 CodeHead Systems. All rights reserved
 */

ext {
    appName = "oop-mock-tests"
    version = "1.0"
}

configurations {
    project.archivesBaseName = "${appName}"
    jar.baseName = "${appName}"
    dynamodb
}

//jacocoTestReport.finalizedBy jacocoTestCoverageVerification

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "wolpert"
            name "Ned Wolpert"
            email "ned.wolpert@codeheadsystems.com"
        }
    }

    scm {
        url "https://github.com/wolpert/terrapin"
    }
}

dependencies {
    implementation project(":oop-mock-client")
    implementation project(":oop-mock")
    implementation project(":oop-mock-common")
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}")
    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}")
    implementation("com.google.guava:guava:${guavaVersion}")
    implementation("commons-io:commons-io:${commonsIoVersion}")

    // Dagger
    implementation "com.google.dagger:dagger:${daggerVersion}" // Common files for runtime
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

    // Immutables
    implementation("org.immutables:value-annotations:${immutablesVersion}")
    annotationProcessor("org.immutables:value:${immutablesVersion}")
    testAnnotationProcessor("org.immutables:value:${immutablesVersion}")

    implementation("org.assertj:assertj-core:${assertjVersion}")
    implementation("org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}")
    implementation("org.junit.jupiter:junit-jupiter-api:${jupiterVersion}")
    implementation("org.junit.jupiter:junit-jupiter-params:${jupiterVersion}")
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")
    implementation("ch.qos.logback:logback-core:${logbackVersion}")
}
